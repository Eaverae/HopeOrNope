<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>HOPE or NOPE! is an application which uses the world-famous Relatio algorithm to determine whether or not a potential relationship can be iffy. If not, the app will give you the go-ahead.

This app was developed as a showcase for guidoschippers.com and it's sole purpose is to demonstrate that I can create apps that require custom functionality like monetization.</value>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddToWishlist" xml:space="preserve">
    <value>Add to wishlist</value>
  </data>
  <data name="AlertMessageActionNotSupported" xml:space="preserve">
    <value>Action not supported on current device.</value>
  </data>
  <data name="AlertMessageAreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="AlertMessageCameraPermissionNeeded" xml:space="preserve">
    <value>Camera permission needed to execute the selected action.</value>
  </data>
  <data name="AlertMessageGalleryPermissionNeeded" xml:space="preserve">
    <value>Photogallery permission needed to execute the selected action.</value>
  </data>
  <data name="AlertMessageItemAlreadyPurchased" xml:space="preserve">
    <value>Item already purchased</value>
  </data>
  <data name="AlertMessagePictureDateTakenIntoAccount" xml:space="preserve">
    <value>We tried to take the picture's date into account to determine the current age of the person depicted.</value>
  </data>
  <data name="AlertMessageRebootWarning" xml:space="preserve">
    <value>The app needs to be rebooted in order for the changes to take effect. Do you want to continue?</value>
  </data>
  <data name="AlertMessageStoragePermissionNeeded" xml:space="preserve">
    <value>Storage permission needed to execute the selected action.</value>
  </data>
  <data name="AlertTitleActionNotSupported" xml:space="preserve">
    <value>Action not supported</value>
  </data>
  <data name="AlertTitleAreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="AlertTitleCameraPermissionNeeded" xml:space="preserve">
    <value>Camera permission needed</value>
  </data>
  <data name="AlertTitleGalleryPermissionNeeded" xml:space="preserve">
    <value>Photogallery permission needed</value>
  </data>
  <data name="AlertTitleItemAlreadyPurchased" xml:space="preserve">
    <value>Item already purchased</value>
  </data>
  <data name="AlertTitlePictureDateTakenIntoAccount" xml:space="preserve">
    <value>Picture's date was taken into account</value>
  </data>
  <data name="AlertTitleStoragePermissionNeeded" xml:space="preserve">
    <value>Storage permission needed</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Camera" xml:space="preserve">
    <value>Camera</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ClearWishlist" xml:space="preserve">
    <value>Clear wishlist</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>© copyright guidoschippers.com</value>
  </data>
  <data name="CurrentVersion" xml:space="preserve">
    <value>Current app version</value>
  </data>
  <data name="DefaultDateOfBirth" xml:space="preserve">
    <value>Default date of birth</value>
  </data>
  <data name="DetermineByPicture" xml:space="preserve">
    <value>Determine by picture</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="EnterDateAge" xml:space="preserve">
    <value>Enter your date's age</value>
  </data>
  <data name="EnterYourAge" xml:space="preserve">
    <value>Enter your age</value>
  </data>
  <data name="FacialRecognition" xml:space="preserve">
    <value>Determine age by picture</value>
  </data>
  <data name="Gallery" xml:space="preserve">
    <value>Gallery</value>
  </data>
  <data name="LastAttempt" xml:space="preserve">
    <value>Last attempt</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading..</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NoItemsFound" xml:space="preserve">
    <value>No items found</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>or</value>
  </data>
  <data name="RemoveAdsTitle" xml:space="preserve">
    <value>Remove ads</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Select language</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="StartTitle" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StatisticsDescription" xml:space="preserve">
    <value>Current statistics are as follows. You can reset your statistics on the settings page.</value>
  </data>
  <data name="StatisticsTitle" xml:space="preserve">
    <value>View stats</value>
  </data>
  <data name="ToastErrorEnterName" xml:space="preserve">
    <value>Please input a name</value>
  </data>
  <data name="ToastMessageAddToWishlistSuccess" xml:space="preserve">
    <value>Person added to wishlist</value>
  </data>
  <data name="ToastMessageAgeTooLow" xml:space="preserve">
    <value>Minimum age is 16</value>
  </data>
  <data name="ToastMessageInputAgeEmpty" xml:space="preserve">
    <value>Please input an age</value>
  </data>
  <data name="ToastMessageInputAgeInvalidInput" xml:space="preserve">
    <value>The given input is not a valid age</value>
  </data>
  <data name="ToastMessageLanguageSet" xml:space="preserve">
    <value>Language set</value>
  </data>
  <data name="ToastMessagePurchaseSuccess" xml:space="preserve">
    <value>Item purchased</value>
  </data>
  <data name="ToastMessageResetComplete" xml:space="preserve">
    <value>App succesfully reset</value>
  </data>
  <data name="ToastMessageVerifyPurchaseInvalid" xml:space="preserve">
    <value>Purchase could not be verified</value>
  </data>
  <data name="ToastMessageVerifyPurchaseSuccess" xml:space="preserve">
    <value>Purchase succesfully verified</value>
  </data>
  <data name="ToastMessageWishlistCleared" xml:space="preserve">
    <value>Wishlist cleared</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="ValildationMultipleFieldsAreInvalid" xml:space="preserve">
    <value>Multiple fields are invalid</value>
  </data>
  <data name="Verdict" xml:space="preserve">
    <value>The verdict</value>
  </data>
  <data name="VerifyPurchases" xml:space="preserve">
    <value>Verify purchased item(s)</value>
  </data>
  <data name="WishlistTitle" xml:space="preserve">
    <value>Wishlist</value>
  </data>
  <data name="YourAgeShortcut" xml:space="preserve">
    <value>Did you know you can set your date of birth on the settings page? That way can skip the first step in this wizard!</value>
  </data>
</root>